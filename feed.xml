<feed xmlns="http://www.w3.org/2005/Atom"> <id>https://bonclay.github.io/</id><title>Hoomels</title><subtitle>Hoomels Blog</subtitle> <updated>2022-06-08T23:25:03+09:00</updated> <author> <name>bonclay</name> <uri>https://bonclay.github.io/</uri> </author><link rel="self" type="application/atom+xml" href="https://bonclay.github.io/feed.xml"/><link rel="alternate" type="text/html" hreflang="ko-KR" href="https://bonclay.github.io/"/> <generator uri="https://jekyllrb.com/" version="4.2.2">Jekyll</generator> <rights> © 2022 bonclay </rights> <icon>/assets/img/favicons/favicon.ico</icon> <logo>/assets/img/favicons/favicon-96x96.png</logo> <entry><title>TypeScript Global Variables. feat! window</title><link href="https://bonclay.github.io/posts/typescript-window-01/" rel="alternate" type="text/html" title="TypeScript Global Variables. feat! window" /><published>2022-06-08T23:20:00+09:00</published> <updated>2022-06-08T23:24:35+09:00</updated> <id>https://bonclay.github.io/posts/typescript-window-01/</id> <content src="https://bonclay.github.io/posts/typescript-window-01/" /> <author> <name>self</name> </author> <category term="TypeScript" /> <category term="Kubeflow pipeline" /> <summary> 개요 Kubeflow pipelines frontend 코드 살펴보다가 TypeScript 관련된 내용 정리. Why pipeline frontend side navigation 숨겨볼라고 코드 살펴보다가 확인. window[‘KFP_FLAGS’] -&amp;gt; 이거 뭐??? export const KFP_FLAGS = { DEPLOYMENT: // tslint:disable-next-line:no-string-literal window &amp;amp;&amp;amp; window['KFP_FLAGS'] ? // tslint:disable-next-line:no-string-literal window['KFP_FLAGS']['DEPLOYMENT'] ===... </summary> </entry> <entry><title>npm ERR! getaddrinfo ENOTFOUND artifactory.twitter.biz (kubeflow pipeline frontend)</title><link href="https://bonclay.github.io/posts/npm-error-01/" rel="alternate" type="text/html" title="npm ERR! getaddrinfo ENOTFOUND artifactory.twitter.biz (kubeflow pipeline frontend)" /><published>2022-05-27T23:30:00+09:00</published> <updated>2022-06-02T22:43:29+09:00</updated> <id>https://bonclay.github.io/posts/npm-error-01/</id> <content src="https://bonclay.github.io/posts/npm-error-01/" /> <author> <name>self</name> </author> <category term="npm" /> <category term="Kubeflow Pipeline" /> <summary> 개요 Kubeflow pipeline frontend 한번 돌려보려다가 npm install에서 막힌 삽질기.. 가이드 잘못된 가이드 : https://github.com/kubeflow/pipelines/wiki/Frontend 내가 확인 했어야 하는 가이드 : https://github.com/kubeflow/pipelines/blob/master/frontend/README.md Error! 나를 좌절케 했던 에러… 아무리 찾아도 방법이 안나옴. 잘못된 가이드는 날 힘들게 한다. npm ERR! code ENOTFOUND npm ERR! syscall getaddrinfo npm ERR! errno ENOTFOUND npm ERR! network req... </summary> </entry> <entry><title>Kafka Python Producer, Consumer</title><link href="https://bonclay.github.io/posts/kafka-with-k8s-02/" rel="alternate" type="text/html" title="Kafka Python Producer, Consumer" /><published>2022-05-22T20:33:00+09:00</published> <updated>2022-05-22T20:33:00+09:00</updated> <id>https://bonclay.github.io/posts/kafka-with-k8s-02/</id> <content src="https://bonclay.github.io/posts/kafka-with-k8s-02/" /> <author> <name>self</name> </author> <category term="Kafka" /> <category term="Python" /> <summary> 개요 지난시간에 설치한 kafka with k8s를 이용하여 python으로 producer, consumer 수행 테스트 Consumer 수행시켜 놓고 Producer 수행 python 준비 pip3 install kafka-python Consumer Topic명을 지정. Topic : test from kafka import KafkaConsumer consumer = KafkaConsumer('test', bootstrap_servers='localhost:9092', enable_auto_commit=True, auto_offset_res... </summary> </entry> <entry><title>Kafka with K8s</title><link href="https://bonclay.github.io/posts/kafka-with-k8s-01/" rel="alternate" type="text/html" title="Kafka with K8s" /><published>2022-05-21T23:30:00+09:00</published> <updated>2022-05-21T23:30:00+09:00</updated> <id>https://bonclay.github.io/posts/kafka-with-k8s-01/</id> <content src="https://bonclay.github.io/posts/kafka-with-k8s-01/" /> <author> <name>self</name> </author> <category term="Kafka" /> <category term="Kubernetes" /> <summary> 개요 Kubernetes에 kafka를 설치하여 동작 테스트 minikube를 활용할 것임 minikube &amp;amp; Docker 설치 및 실행은 이전 포스트를 참고. 테스트 버전 minikube v1.25.2 kubernetes, kubectl v1.23.3 $ minikube start –nodes 옵션으로 node 갯수를 조절 가능. 하지만 내 맥북에선 사양탓인지 안되어서 하나의 node로 테스트 Deploy Kafaka With Kubernetes 참고 사이트 namespace 생성 apiVersion: v1 kind: Namespace metadata: name: "kafka" labels... </summary> </entry> <entry><title>채팅 서비스 구조</title><link href="https://bonclay.github.io/posts/chat-architecture-01/" rel="alternate" type="text/html" title="채팅 서비스 구조" /><published>2022-05-15T22:00:00+09:00</published> <updated>2022-05-15T22:00:00+09:00</updated> <id>https://bonclay.github.io/posts/chat-architecture-01/</id> <content src="https://bonclay.github.io/posts/chat-architecture-01/" /> <author> <name>self</name> </author> <category term="프로젝트" /> <summary> 개요 채팅 프로그램을 한번 설계해 보려고 한다. 그냥 파이썬 공부 쫌 해볼라고 개인 프로젝트로 간단한 채팅프로그램 해보는 것임. 동기 &amp;amp; 비동기 채팅이라 함은 동기가 될 수도 있고 비동기가 될 수도 있다. 하나의 채팅서버가 존재하고 여러 클라이언트가 접속된 경우 메세지는 채팅서버를 통해 바로바로 전달된다. (동기적) 채팅서버가 없다? 채팅 서버가 없어도 비동기 방식으로 메세지를 전달(게시)하고 구독중인 클라이언트에게 전달된다. (비동기적) 채팅서버가 채팅을 관리할 경우 빠른 메세지 전달이 가능하다. 채팅서버 없이 채팅을 게시하면 구독해 가는 방식이므로 채팅서버가 바로 전달해주는 것에 비해 메세지 전달이 느리다. ... </summary> </entry> </feed>
